# 日志输出到文件
log4j.appender.hpy.File=org.apache.log4j.DailyRollingFileAppender
log4j.appender.hpy.File.file=d:\\log4j\\log4j.log
log4j.appender.hpy.File.DatePattern=.yyyy-MM-dd.log
log4j.appender.hpy.File.layout=org.apache.log4j.PatternLayout
log4j.appender.hpy.File.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p (%C:%M) - %m%n

# 日志输出到控制台
log4j.appender.hpy.Console=org.apache.log4j.ConsoleAppender
log4j.appender.hpy.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.hpy.Console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p (%C:%M) - %m%n

# 定义多个数据源，级别取精确，输出为各自
# 理解:
# 需要输出日志的类，此时哪个数据源能更精确的匹配到它
# 能够更精确匹配到它的数据源，其它数据源的日志输出级别都以它为准
# 例如:
# com.hpy.LogTest类的日志输出级别为error，因为该数据源更精确匹配到它
# com.LogTest类的日志输出级别为info，因为该数据源更精确匹配到它
# rootLogger数据源是垫底的，即没有数据源匹配上，就用它
log4j.rootLogger=debug,hpy.File,hpy.Console
log4j.logger.com.hpy=error,hpy.File,hpy.Console
log4j.logger.com=info,hpy.File,hpy.Console